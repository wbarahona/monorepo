name: Deploy API App

on:
  push:
    branches: [master]
    paths:
      - 'apps/api/**'
      - 'package.json'
      - '.github/workflows/backend-app.yml'

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/api
          tags: |
            type=sha,prefix=,format=short
            type=ref,event=branch
            latest

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./apps/api/dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.DIGITALOCEAN_HOST }}
          username: ${{ secrets.DIGITALOCEAN_USERNAME }}
          key: ${{ secrets.DIGITALOCEAN_SSH_KEY }}
          script: |
            # Login to GitHub Container Registry
            echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

            # Pull the latest image
            docker pull ghcr.io/${{ github.repository_owner }}/api:latest

            # Stop and remove existing container (if any)
            docker stop api || true
            docker rm api || true

            # Run the new container
            docker run -d \
              --name api \
              --restart unless-stopped \
              -p 3001:3001 \
              -e NODE_ENV=production \
              ghcr.io/${{ github.repository_owner }}/api:latest

            # Clean up old images
            docker image prune -af --filter "until=24h"
